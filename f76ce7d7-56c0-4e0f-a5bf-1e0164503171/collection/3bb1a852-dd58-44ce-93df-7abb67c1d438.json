{"info":{"_postman_id":"3bb1a852-dd58-44ce-93df-7abb67c1d438","name":"Galaxy APIs 101","description":"___This collection accompanies the Postman Galaxy APIs 101 training session.___\n\nLearn API essentials by working your way through this collection!\n\n__FORK the collection to create a copy in your own workspace.__\n\n* Start by opening the `Learn APIs` folder, selecting the `Begin learning` request, and clicking **Send**.\n* When you get a response, open the **Visualize** tab and follow the instructions from there.\n\nWhen you're done working through the collection, open the `Check progress` folder and copy your collection link (**Share** &gt; **Get public link**) into the address to test your work for completion!\n\nWhen your submission is successfully processed you'll receive the [Postman APIs 101](https://badgr.com/public/badges/0WGPGyuYSwmXOhr-6v7D8Q) badge!","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"Learn APIs","item":[{"name":"Begin learning","id":"21241940-8cb0-47f2-9ba4-6cba2acc18ba","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"{{training_api}}/begin","host":["{{training_api}}"],"path":["begin"]}},"response":[]},{"name":"Get customers","id":"e6fa3dd2-e137-4fa1-a1c2-bc4e254acaf3","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{training_api}}/customers?type=individual","host":["{{training_api}}"],"path":["customers"],"query":[{"key":"type","value":"individual"}]}},"response":[]},{"name":"Add customer","id":"f1140c5f-1828-4f74-942c-045fe17a778f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n  \"name\": \"{{$randomFullName}}\",\r\n  \"address\": \"{{$randomStreetAddress}}\",\r\n  \"type\": \"individual\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{training_api}}/customer","host":["{{training_api}}"],"path":["customer"]}},"response":[]},{"name":"Update customer","id":"3234375f-cc61-4bf3-8798-ac13a92ceee0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\r\n  \"address\": \"{{$randomStreetAddress}}\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{training_api}}/customer?cust_id=I5y61K-0U","host":["{{training_api}}"],"path":["customer"],"query":[{"key":"cust_id","value":"I5y61K-0U"}]}},"response":[]},{"name":"Remove customer","id":"22ce40b3-b266-45c4-aab3-c5921032b25e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[],"url":{"raw":"{{training_api}}/customer/:cust_id","host":["{{training_api}}"],"path":["customer",":cust_id"],"query":[{"key":"","value":"","type":"text","disabled":true}],"variable":[{"key":"cust_id","value":"I5y61K-0U"}]}},"response":[]}],"id":"32fee471-e7cd-4c0f-8035-1920a8dd2031","event":[{"listen":"prerequest","script":{"id":"1f3a444f-44b0-43c2-b714-9ed88e2f55ae","type":"text/javascript","exec":["var uID = pm.collectionVariables.get(\"userId\");","if(!uID){","    pm.collectionVariables.set(\"userId\", pm.variables.replaceIn('{{$guid}}'));","}","pm.request.headers.add( { key: 'user-id', value: pm.collectionVariables.get('userId') } );"]}},{"listen":"test","script":{"id":"a5d14a15-0a34-49c7-98c1-ab14b25382cd","type":"text/javascript","exec":[""]}}]},{"name":"Check progress","item":[{"name":"Collection status","event":[{"listen":"test","script":{"id":"7676b35b-4f9a-4dad-a521-c853880b7ca7","exec":["//auth details at collection level","let authObj = pm.response.json().auth;","//request array","let requestArr = pm.response.json().item[0].item;","","pm.test(\"If you have any fails below look back through the requests or ask for support. When all of your tests pass include your collection link here to get your badge: bit.ly/submit-apis-101\", () => {","    pm.expect(true);","});","","//used auth","pm.test(\"Authorized requests\", () => {","    pm.expect(authObj).to.be.an(\"object\");","    pm.expect(authObj).to.have.property(\"apikey\"); ","    console.log(authObj);","});","","//used all required methods","pm.test(\"Used GET, POST, PUT, DELETE methods\", () => {","    //first folder should have all methods in requests","    let methArr = requestArr.map(value => value.request.method); ","    console.log(methArr);","    pm.expect(methArr).to.include.members([\"GET\", \"POST\", \"PUT\", \"DELETE\"]);","});","","//used params - query and path","pm.test(\"Used query and path parameters\", () => {","    //first folder should have query","    let queryArr = requestArr.filter(value => value.request.url.query).map(value => value.request.url.query);","    console.log(queryArr);","    pm.expect(queryArr).to.have.length.of.above(0);","    //first folder should also have path","    let pathArr = requestArr.filter(value => value.request.url.path).map(value => value.request.url.path);","    var pathParams = pathArr.flat().filter(p => p.startsWith(':')); ","    console.log(pathParams);","    pm.expect(pathParams).to.have.length.of.above(0);","});","","//sent body","pm.test(\"Sent body data\", () => {","    //first folder should have a body","    let bodyArr = requestArr.filter(value => value.request.body).map(value => value.request.body); ","    console.log(bodyArr);","    pm.expect(bodyArr).to.have.length.of.above(0);","});","","//used vars (can currently only check env with run output - future enhancement)","pm.test(\"Used variables\", () => {","    //base path for main folder should use var","    //url is object when path or query param, string otherwise","    let addresses = requestArr.filter(value => value.request.url.raw ? value.request.url.raw : value.request.url).map(value => value.request.url.raw ? value.request.url.raw : value.request.url);","    var addressVars = addresses.filter(p => encodeURI(p).indexOf('%7B%7B')>-1); ","    console.log(addressVars);","    pm.expect(addressVars).to.have.length.of.above(0);","    //auth should also use var","    pm.expect(encodeURI(authObj.apikey.value).indexOf('%7B%7B')).to.be.above(-1);","","});","","//visualizer output","var template = `","<h3>Complete your collection</h3>","<p>","    Copy your completed collection link in as the request address (make sure your requests are saved), hit <strong>Send</strong> and open the Test Results.","</p>","<p>","If you have any fails, look back through the requests or ask for support in the session chat or conference help desk. When all of your tests pass, navigate to this form in your browser and include your collection link to get your badge: bit.ly/submit-apis-101","</p>","`;","pm.visualizer.set(template, {});"],"type":"text/javascript"}}],"id":"081a9975-d453-4225-86ba-89c06bb42ea7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"https://www.getpostman.com/collections/a578fcc8801e457a28b1","protocol":"https","host":["www","getpostman","com"],"path":["collections","a578fcc8801e457a28b1"]},"description":"Copy your completed collection link in as the request address (make sure your requests are saved), hit **Send** and open the **Test Results**.\n\nIf you have any fails, look back through the requests or ask for support in the session chat or conference help desk. When all of your tests pass, include your collection link here to get your badge: [bit.ly/submit-apis-101](bit.ly/submit-apis-101)"},"response":[]}],"id":"4528dc79-3b69-4c26-a0cc-1f3fde5a42ba","description":"Enter your collection link as the request address:\n\n* Select the collection\n* Open __Share__\n* Choose __Get public link__\n* _Update the link if you changed your requests_\n* Copy the link and enter it in `Collection status`\n\n**Send** and check out the **Test Results**!"}],"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{email_key}}","type":"string"},{"key":"key","value":"csm_key","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"a84abf75-4c6f-4e92-99d6-21baf3217d7e","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"67d37d55-b184-413a-aa66-416c5f77195a","type":"text/javascript","exec":["var template = `","    <!--showdown for converting md to html-->","    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/showdown/1.9.1/showdown.min.js\"></script>","    <script type=\"text/javascript\">","        function getContent(orig){","            var converter = new showdown.Converter(), text = orig, html = converter.makeHtml(text);","            return html;","        }","    </script>","    ","    <!--syntax highlighting-->","    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.0.0/styles/default.min.css\">","    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.0.0/highlight.min.js\"></script>","    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.0.0/styles/googlecode.min.css\">","    ","    <!--generic styles-->","    <style type=\"text/css\">","    body { background-color: white; }","    #notes p, #next p {padding-left:20px; border-left:2px solid #7D728E; }","    #notes blockquote p, #next blockquote p { border-left: none; background-color: #FF6C3722; color: #FF6C37; padding: 10px; }","    #notes, #next {padding-right:20px;}","    img {max-width:600px; padding-left:20px; padding-bottom:20px;}","    h4 {color:#6D7F91;}","    #intro, #notes, #next {color:#2B3B41;}","    </style>","","    <h3 style=\"color: {{status}}\">{{response.tutorial.title}}</h3>","    ","    <div id=\"intro\"></div>","","    <div id=\"notes\"></div>","    ","    {{#if response.tutorial.next}}","    <h4>Next</h4>","    <div id=\"next\"></div>","    {{/if}}","    ","    <script type=\"text/javascript\">","        if(\"{{response.tutorial.rip}}\".length>0)","            document.write(getContent(\"{{response.tutorial.rip}}\"));","    </script>","    ","    <script type=\"text/javascript\">","        if(\"{{response.tutorial.pic}}\".length>0)","            document.write(\"<img src='{{response.tutorial.pic}}' alt='postman steps'/>\");","    </script>","","    <!--content to process before rendering-->","    <script type=\"text/javascript\">","        pm.getData(function(error, data) {","            var tut = data.response.tutorial;","            if(tut){","                if(tut.steps){","                    var i; ","                    var infoArray = tut.steps;","                    var notes=\"<div id='notes'>\";","                    for(i=0; i<infoArray.length; i++){","                        notes+=getContent(infoArray[i].note);","                        if(infoArray[i].raw_data){","                            notes+=\"<pre style='padding-left:20px'><code class='json'>\"+JSON.stringify(infoArray[i].raw_data, null, 2)+\"</code></pre>\";","                        }","                        if(infoArray[i].js_code){","                            var c;","                            notes+=\"<pre style='padding-left:20px'><code class='js'>\";","                            for(c=0; c<infoArray[i].js_code.length; c++)","                                notes+=infoArray[i].js_code[c]+\"<br/>\";","                            notes+=\"</code></pre>\";","                        }","                        if(infoArray[i].ref_data){","                            notes+=\"<pre style='padding-left:20px'><code class='json'>\"+JSON.stringify(data.response[infoArray[i].ref_data], null, 2)+\"</code></pre>\";","                        }","                        if(infoArray[i].pic)","                            notes+=\"<img src='\"+infoArray[i].pic+\"' alt='postman steps'/>\";","                    }","                    notes+=\"</div>\"","                    document.getElementById(\"notes\").innerHTML=notes;","                }","                document.getElementById(\"intro\").innerHTML=getContent(tut.intro);","                if(tut.next){","                    var nextDiv=document.getElementById(\"next\");","                    var n;","                    var nextContent=\"\";","                    var nextArray=tut.next;","                    for(n=0; n<nextArray.length; n++){","                        nextContent+=getContent(nextArray[n].step);","                        if(nextArray[n].raw_data){","                            nextContent+=\"<pre style='padding-left:20px'><code class='json'>\"+JSON.    stringify(nextArray[n].raw_data, null, 2)+\"</code></pre>\";","                        }","                        if(nextArray[n].js_code){","                            var c;","                            nextContent+=\"<pre style='padding-left:20px'><code class='js'>\";","                            for(c=0; c<nextArray[n].js_code.length; c++)","                                nextContent+=nextArray[n].js_code[c];","                            nextContent+=\"</code></pre>\";","                        }","                        if(nextArray[n].pic)","                            nextContent+=\"<img src='\"+nextArray[n].pic+\"' alt='postman steps'/>\";","                    }","                    nextDiv.innerHTML=getContent(nextContent);","                }","            }","            hljs.initHighlighting();","        });","    </script>","`;","if (pm.response.headers.get(\"Content-Type\").includes(\"json\")) {","  pm.visualizer.set(template, {","    response: pm.response.json(),","    status: (\"\" + pm.response.code).startsWith(\"4\") ? \"#cc0000\" : \"#FF6C37\"","  });","} else if (pm.response.headers.get(\"Content-Type\").includes(\"html\")) {","  pm.visualizer.set(`{{info}}`, {","    info:","      \"Hmm this seems to be HTML and not JSON - you might have hit an invalid endpoint - undo your changes, or close the request without saving and try opening / sending it again!\"","  });","}"]}}],"variable":[{"id":"b6f81c8b-f93b-402e-a976-5472cec41eb8","key":"backup_api","value":"https://galaxy-apis-101.herokuapp.com"},{"id":"40b1d01c-5877-45c5-b7db-fa78600973ec","key":"userId","value":""},{"id":"7ea4e0b5-820b-405e-aecf-1348b00f700e","key":"training_apis","value":"galaxy-apis-101.glitch.me/begin"},{"id":"89b42749-1727-49a3-8ef3-593d089363a1","key":"training_api","value":"galaxy-apis-101.glitch.me"},{"id":"cc44ab10-67fe-45b3-8e35-f835c094372a","key":"email_key","value":"fokist@outlook.com","type":"string"},{"id":"caf2c416-ec22-4e7c-bfa5-9c159fec2ad1","key":"your-collection-link","value":"https://www.postman.com/dima123493/workspace/postman-training/collection/19464078-3bb1a852-dd58-44ce-93df-7abb67c1d438?action=share&creator=19464078"}]}